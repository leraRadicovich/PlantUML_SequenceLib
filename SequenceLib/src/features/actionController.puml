@startuml
/'Процедуры для работы с вызовами и ответами'/
!unquoted procedure rq($initiator, $executor, $liveLine="",$action, $comment="")
    %invoke_procedure("proxyController", "rq", $initiator, $executor, $liveLine, $action, $comment)
!endprocedure

!unquoted procedure rs($initiator, $executor, $liveLine="",$action, $comment="")
    %invoke_procedure("proxyController", "rs", $initiator, $executor, $liveLine, $action, $comment)
!endprocedure

/'Проксиконтроллер - проверка наличия проксирующих вызовов'/
!unquoted procedure proxyController($type, $initiator, $executor, $liveLine, $action, $comment)
    !if $executor != ""
        !$executorsList = %splitstr($executor, ",")
        !$i = 0
        !if $type == "rq"
            !$proxyAction = "Проксирование запроса"
        !else
            !$proxyAction = "Проксирование ответа"
        !endif
        !foreach $party in $executorsList
            !if $i == 0
                %invoke_procedure("actionController", $type, $initiator, $party, $liveLine, $action, $comment)
            !else
                %invoke_procedure("actionController", $type, $initiator, $party, $liveLine, $proxyAction, "")
            !endif
            !$initiator = $party
            !$executorsList = %json_remove($executorsList,0)
            !$i = $i + 1
        !endfor
    !else
        %invoke_procedure("actionController", $type, $initiator, $executor, $liveLine, $action, $comment)
    !endif
!endprocedure

/'Логика обработки взаимодействий между участниками'/
!unquoted procedure actionController($type, $initiator, $executor, $liveLine, $action, $comment)
    /'Кейс копирование или автоответ'/

    /'Автоответ: меняем инициатора и экзекьютора местами'/
    !if $initiator == "" && $executor == ""
        !$getPartiesAliasId = $id
        !foreach $item in $processMap
            !if $getPartiesAliasId == $item.id
                !$initiator = $item.executor
                !$executor = $item.initiator
            !endif
        !endfor
    !endif

    /'Автоответ: копируем исходное положение инициатора и экзекьютора'/
    !if $initiator == "*"
        !$getPartiesAliasId = $executor
        !foreach $item in $processMap
            !if $getPartiesAliasId == $item.id
                !$initiator = $item.initiator
                !$executor = $item.executor
            !endif
        !endfor
    !endif

    /'Проверка переданных алиасов'/
    !if $initiator != ""
        %invoke_procedure("aliasCheck", $initiator)
    !endif

    !if $executor != ""
        %invoke_procedure("aliasCheck", $executor)
    !endif

    /'Проверка текущего layer диаграммы - нужен для отрисовки в карте процесса только хэппикейса'/
    !$currentLayer = ""
    !if $layerId == 0
        !$currentLayer = "default"
    !else
        !foreach $item in $layerMap
            !if $layerId == $item.id
                !$currentLayer = $item.type
            !endif
        !endfor
    !endif

    /'Непосредственно отрисовка стрелок и увеличение id'/
    %invoke_procedure("actionBuilder", $initiator, $executor, $liveLine, $action, $type)
    !$id = $id + 1

    /'Построение карты процесса'/
    %invoke_procedure("processMapEntityBuilder", $id, $type, $initiator, $executor, $liveLine, $action, $comment, $currentLayer)
    %invoke_procedure("setOriginalAction",$type, $initiator, $executor, $liveLine, $action)
    /'Построение заметки с диаграммой в оригинальном синтаксисе'/
!endprocedure

/'Сохранение стрелки в памяти'/
!unquoted procedure processMapEntityBuilder($id, $type, $initiator, $executor, $liveLine, $action, $comment, $currentLayer)
    !$temp = {}
    !$temp = %json_add($temp, id, $id)
    !$temp = %json_add($temp, initiator, $initiator)
    !$temp = %json_add($temp, executor, $executor)

    !if $diagramMode == "final"
        !$temp = %json_add($temp, type, $type)
        !$temp = %json_add($temp, layer, $currentLayer)
        !$temp = %json_add($temp, action, $action)
        !if $liveLine != ""
            !$temp = %json_add($temp, liveline, $liveLine)
        !endif
        !if $comment != ""
            !$temp = %json_add($temp, comment, $comment)
        !endif
    !endif

    !$processMap = %json_add($processMap, $temp)
!endprocedure

/'Сохранение данных для построения диаграммы в оригинальном синтаксисе'/
!unquoted procedure setOriginalAction($type, $initiator, $executor, $liveLine, $action)
    !if $diagramMode == "final"
        !$temp = {}
        !$temp = %json_add($temp, "type", "action")
        !$temp = %json_add($temp, "subtype", $type)
        !$temp = %json_add($temp, "initiator", $initiator)
        !$temp = %json_add($temp, "executor", $executor)
        !$temp = %json_add($temp, "liveLine", $liveLine)
        !$temp = %json_add($temp, "action", $action)
        !$temp = %json_add($temp, "layerId", $layerId)
        !$originalSyntaxMap = %json_add($originalSyntaxMap, $temp)
    !endif
!endprocedure

/'Процедуры rq и rs заменяют синтаксис рисования стрелок.'/
!unquoted procedure actionBuilder($initiator, $executor, $liveLine="",$action, $type)
    /'Определение типа стрелки'/
    !if $type == rq
        !$arrow = "->"
    !else
        !$arrow = "-->"
    !endif
    /'Определение линии жизни'/
    !if $liveLine == "..."
        !$liveLineUnderRaw = $liveLine
        !$liveLineInRaw = ""
    !else
        !$liveLineInRaw = $liveLine
    !endif
$initiator $arrow $executor $liveLineInRaw: $action
/'Определение прерывания линии жизни'/
!if $liveLineUnderRaw == "..."
$liveLineUnderRaw
!endif
!endprocedure