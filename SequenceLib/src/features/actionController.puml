@startuml
/'Интерфейс для отрисовки сплошной стрелки'/
!unquoted procedure rq($initiator, $executor, $liveLine, $action, $comment)
    %invoke_procedure("inputValidaexecutorr", "->", $initiator, $executor, $liveLine, $action, $comment)
!endprocedure

/'Интерфейс для отрисовки пунктирной стрелки'/
!unquoted procedure rs($initiator, $executor, $liveLine, $action, $comment)
    %invoke_procedure("inputValidaexecutorr", "-->", $initiator, $executor, $liveLine, $action, $comment)
!endprocedure

/'Валидатор данных для отрисовки стрелок'/
!unquoted procedure inputValidaexecutorr($arrow, $initiator, $executor, $liveLine, $action, $comment)
    /'Автоответ'/
    !if $initiator == "" && $executor == ""
        /'Т.к. объект еще не создан, $id хранит идентификатор предыдущей стрелки либо 0,
        нумерация списков в plantUml начинается с 0, поэтому из $id вычитаем 1,
        чтобы обратиться к последнему объекту в карте процесса'/
        !$i = $id - 1
        !$initiator = $originalSyntaxMap[$i].executor
        !$executor = $originalSyntaxMap[$i].initiator
    /'Копирование стрелки'/
    !elseif $initiator == "*"
        !$i = %intval($executor) - 1
        !$executor = $originalSyntaxMap[$i].executor
        !$initiator = $originalSyntaxMap[$i].initiator
    /'Обработка проксирования'/
    !endif

    /'Вызов контроллера'/
    !$executorList = %splitstr($executor, ",")
    !$ifFirst = 1
    !if $executor != ""
        !foreach $item in %splitstr($executor, ",")
            !if $ifFirst
                !$executor = $item
                !$ifFirst = 0
            !else
                !$initiator = $executor /'Еще не обновили значение $executor, записываем его в $initiator'/
                !$executor = $item /'Обновили значение $executor'/
                !$action = $proxyArrow[$arrow]
            !endif
            %invoke_procedure("actionController", $arrow, $initiator, $executor, $liveLine, $action, $comment)
        !endfor
    !else
        %invoke_procedure("actionController", $arrow, $initiator, $executor, $liveLine, $action, $comment)
    !endif
!endprocedure

/'Контроллер для отрисовки и сохранения в памяти стрелок,
создает объект текущей стрелки, записывает его в карту процесса, рисует стрелку'/
!unquoted procedure actionController($arrow, $initiator, $executor, $liveLine, $action, $comment)
    !$id = $id + 1

    /'Проверка переданных алиасов'/
    !if $initiator != ""
        %invoke_procedure("aliasCheck", $initiator)
    !endif

    !if $executor != ""
        %invoke_procedure("aliasCheck", $executor)
    !endif

    %invoke_procedure("setContext", $arrow, $initiator, $executor, $liveLine, $action, $comment)
    !$originalSyntaxMap = %json_add($originalSyntaxMap, $actionObject)
    %invoke_procedure("actionBuilder",$arrow, $initiator, $executor, $liveLine, $action)
!endprocedure

!unquoted procedure setContext($arrow, $initiator, $executor, $liveLine, $action, $comment)
    !$actionObject = %json_set($actionObject, id, $id)
    !$actionObject = %json_set($actionObject, initiator, $initiator)
    !$actionObject = %json_set($actionObject, executor, $executor)
    !if $diagramMode == "final"
        !$actionObject = %json_set($actionObject, type, "action")
        !$actionObject = %json_set($actionObject, subtype, $arrow)
        !$actionObject = %json_set($actionObject, liveLine, $liveLine)
        !$actionObject = %json_set($actionObject, action, $action)
        !$actionObject = %json_set($actionObject, comment, $comment)
        !$actionObject = %json_set($actionObject, layerId, $layerId)
    !endif
    !dump_memory
!endprocedure

/'Процедура для отрисовки стрелки'/
!unquoted procedure actionBuilder($arrow, $initiator, $executor, $liveLine, $action)
    /'Определение линии жизни'/
    !if $liveLine == "..."
        !$liveLineUnderRaw = $liveLine
        !$liveLineInRaw = ""
    !else
        !$liveLineInRaw = $liveLine
    !endif
$initiator $arrow $executor $liveLineInRaw: $action
/'Определение прерывания линии жизни'/
!if $liveLineUnderRaw == "..."
$liveLineUnderRaw
!endif
!endprocedure