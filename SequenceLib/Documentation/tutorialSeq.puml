@startuml
!include ../src/SequenceLibIncludeFile.puml
diagramInit("draft",,"Диаграмма для обучения")
NOTE(,,,"Эта диаграмма отражает возможности библиотекой - она уже подключена командой include! - см. <color blue>**2 строку этого кода**</color>,\nбиблиотека инициализирована - <color:blue>**3 строка**</color>. Теперь давайте объявим библиотеку в качестве примера как участника\nс помощью команды parties. <color:blue>**Удалите апостроф перед следующей строкой кода**")

'parties(participant,"Библиотека для работы с сиквенсами",lib,)

NOTE(,,,"Чтобы рисовать стрелки необходимо использовать команды rq и rs.\n<color blue> **См. следующую строку кода**")
rq(lib,author,++,"Теперь попробуем разобраться, как пользоваться библиотекой","Комментарий для легенды")

NOTE(,,,"Для автоовтетов не указывайте инициатора и исполнителя в командах rq и rs.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
'rs(,,,"Автоответ","Комменатрий для легенды")

NOTE(,,,"Зафиксируем начало обучения событием аудита с помощью команды audit\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
'audit(MEMO_EVENT,,"Событие для аудита",author)

NOTE(, , , "Найдите в данной диаграмме шаг ее инициализации - он указан командой **diagramInit**\nв <color blue> **3 строке в коде диаграммы**</color>. Скопируйте ее и попробуйте удалить, обратите внимание на ошибку,\nпотом вставьте обратно.")

NOTE(,,,"Давайте сохраним последнюю стрелку в памяти с помощью команды copyAction.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
'copyAction()

NOTE(,,,"Некоторые типы участников в сикнвенсе определены по дефолту, это redis, kafka, postgreSql.\nЧтобы проверить, <color:blue>**удалите апостроф перед следующей строкой кода**")
'rq(author,redis_memo,++,"Сохранить ссылку на туториал","Обратите внимание, что бд не объявлена в явном виде")

NOTE(,,,"Обратите внимание, что redis, как база данных, не объявлен в явном виде.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
'rs(,,--,"Ссылка сохранена","Комментарий для легенды")

NOTE(,,,"Проверим, как работает копирование, вызовем rs с ссылкой на скопированную командой copyAction стрелку.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
'rs(*,2,--,"Что ты еще можешь?","Коvментарий")

NOTE(,,,"Чтобы зафиксировать список изменений или доработок\nвоспользуйтесь командой todo.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
todo("Пожелания или замечания для разрработчика")

NOTE(,,,"Зафиксируем наши действия в аудите.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")
'audit(MEMO_EVENT,SUCCESS,"Фиксация результата",author)

NOTE(,,,"Давайте теперь построим легенду для текущей диаграммы, вызовем команду LEGEND.\n<color:blue>**Удалите апостроф перед следующей строкой кода**")

'LEGEND()

NOTE(,,,"Изучите легенду, а затем самостоятельно выполните следующие действия:\n1. Измените режим работы библиотеки на final - обратите внимание, как изменилась легенда диаграммы\n2. По аналогии с вызовом легенды, без аргументов, вызовите команду ORIGINAL - а затем добавьте любой символ во 2 переменную команды <color blue>**diagramInit, 3 строка**,\n3. Вызовите HELP, сначала ничего не указывая в скобках, затемHELP")
'ORIGINAL()
'HELP()
'HELP(HELP)

@enduml